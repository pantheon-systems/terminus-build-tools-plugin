# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
defaults: &defaults
  docker:
    - image: quay.io/philltran/docker-build-tools-ci
  working_directory: ~/terminus_build_tools_plugin
  environment:

    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # TERMINUS_ORG:   Name of Pantheon Agency / Team
    # CIRCLE_TOKEN:   Circle CI Token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GITHUB_USER:    The GitHub username
    # GIT_EMAIL:      The email address to use when making commits
    # BITBUCKET_USER: The Bitbucket Username
    # BITBUCKET_PASS: The Bitbucket app specific password
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #=========================================================================

    BASH_ENV: ~/.bashrc
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    TERM: dumb

version: 2
jobs:
    # @todo: common initialization, maybe
    build:
        <<: *defaults
        steps:
            - run: echo "Nothing in the build step for now."

    test_drupal_8_github:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: dependencies
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test D8 with GitHub
                command: ./.circleci/test-example-repo.sh "pantheon-systems/example-drops-8-composer:dev-master" github
            - run:
                name: D8 with GitHub Build Failed
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh

    test_drupal_7_github:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: dependencies
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test D7 with GitHub
                command: ./.circleci/test-example-repo.sh "pantheon-systems/example-drops-7-composer:dev-master" github
            - run:
                name: D7 with GitHub Build Failed
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh

    test_drupal_8_bitbucket:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: dependencies
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test D8 with BitBucket
                command: ./.circleci/test-example-repo.sh "pantheon-systems/example-drops-8-composer:dev-master" bitbucket
            - run:
                name: D8 with Bitbucket Build Failed
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh

    test_wordpress:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: dependencies
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test WordPress with GitHub
                command: ./.circleci/test-example-repo.sh "pantheon-systems/example-wordpress-composer:dev-master" github
            - run:
                name: WordPress with GitHub Build Failed
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh

    # @todo: anything to do once everything is complete?
    # There is probably a way to check the results on the other jobs.
    completion:
        <<: *defaults
        steps:
            - run:
                name: Clean up old keys
                command: |
                    echo "All tests passed."
                    for key in $(terminus ssh-key:list --fields=Description,ID 2>/dev/null | grep ci-bot-build-tools | sort -r | sed -e '1,12d' | sed -e 's/ *[^ ]* *//') ; do terminus ssh-key:remove $key ; done

workflows:
  version: 2
  build_test:
    jobs:
      - build
      - test_drupal_8_github:
          requires:
            - build
      - test_drupal_7_github:
          requires:
            - build
      - test_drupal_8_bitbucket:
          requires:
            - build
      - test_wordpress:
          requires:
            - build
      - completion:
          requires:
            - test_drupal_8_github
            - test_drupal_7_github
            - test_drupal_8_bitbucket
            - test_wordpress
