# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/php-ci:4.x
  working_directory: ~/terminus_build_tools_plugin
  environment:

    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # TERMINUS_ORG:   Name of Pantheon Agency / Team
    # CIRCLE_TOKEN:   Circle CI Token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GITHUB_USER:    The GitHub username
    # GIT_EMAIL:      The email address to use when making commits
    # BITBUCKET_USER: The Bitbucket Username
    # BITBUCKET_PASS: The Bitbucket app specific password
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #=========================================================================

    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    TERM: dumb
    TERMINUS_HIDE_UPDATE_MESSAGE: 1

version: 2
jobs:
    # @todo: common initialization, maybe
    unit:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - composer-v1-{{ checksum "composer.lock" }}
                    # fallback if no exact match is found
                    - composer-v1-
            - run: composer install -n
            - save_cache:
                key: composer-v1-{{ checksum "composer.lock" }}
                paths:
                    - vendor
            - run:
                name: Run unit tests
                command: composer run unit-test

    test_drupal_7_github:
        <<: *defaults
        resource_class: large
        steps:
            - checkout
            - run:
                name: Configure globals
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test D7 with GitHub
                command: ./.circleci/test-github-repo.sh "pantheon-systems/example-drops-7-composer:dev-master"
            - run:
                name: Watch CircleCI tests
                command: ./.circleci/watch-circle.sh
            - run:
                name: Clean up D7 GitHub fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up D7 GitHub fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

    # Note that we do more work on the Drupal 8 + GitHub test than in other permutations.
    # We test creating a PR and merging it to master here, but omit those tests
    # elsewhere in the interest of saving testing time.
    test_drupal_8_github:
        <<: *defaults
        docker:
          - image: quay.io/pantheon-public/php-ci:4.x
        resource_class: large
        steps:
            - checkout
            - run:
                name: Configure globals
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Check Terminus version
                command: terminus --version
            - run:
                name: Test D8 with GitHub
                command: ./.circleci/test-github-repo.sh "pantheon-systems/example-drops-8-composer:dev-master"
            - run:
                name: Watch CircleCI tests after build:project:create
                command: ./.circleci/watch-circle.sh
            - run:
                name: Test secrets can be set and removed
                command: ./.circleci/test-secrets.sh
            - run:
                name: Test build:project:repair
                command: ./.circleci/test-github-repair.sh
            - run:
                name: Watch CircleCI tests after build:project:repair
                command: ./.circleci/watch-circle.sh
            - run:
                name: Test merge to master
                command: ./.circleci/test-merge-master.sh
            - run:
                name: Clean up D8 GitHub fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up D8 GitHub fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

    test_drupal_8_gitlab:
        <<: *defaults
        docker:
          - image: quay.io/pantheon-public/php-ci:4.x
        resource_class: large
        steps:
            - checkout
            - run:
                name: dependencies
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test WordPress with GitLab
                command: ./.circleci/test-gitlab-repo.sh "pantheon-systems/example-drops-8-composer:dev-master" gitlabci
            - run:
                name: Watch GitLab CI tests
                command: ./.circleci/watch-gitlabci.sh
            - run:
                name: Clean up WordPress GitLab fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up WordPress GitLab fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

    test_drupal_8_bitbucket:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: Configure globals
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Test D8 with BitBucket
                command: echo "BitBucket test skipped"
                #command: ./.circleci/test-bitbucket-repo.sh "pantheon-systems/example-drops-8-composer:dev-master"
            - run:
                name: Watch CircleCI tests
                command: echo "Skipping the watch-cicle step too"
                #command: ./.circleci/watch-circle.sh
            - run:
                name: Clean up D8 Bitbucket fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up D8 Bitbucket fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

    # Note that we do more work on the WordPress + GitHub test than in other permutations.
    # We test creating a PR and merging it to master here, but omit those tests
    # elsewhere in the interest of saving testing time.
    test_wordpress_github:
        <<: *defaults
        resource_class: large
        steps:
            - checkout
            - run:
                name: Configure globals
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Disable strict SSH host checking to prevent SSH connect issues
                command: echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
            - run:
                name: Test WordPress with GitHub
                command: ./.circleci/test-github-repo.sh "pantheon-systems/example-wordpress-composer:dev-master" --use-ssh
            - run:
                name: Watch CircleCI tests after build:project:create
                command: ./.circleci/watch-circle.sh
            - run:
                name: Test secrets can be set and removed
                command: ./.circleci/test-secrets.sh
            - run:
                name: Test build:project:repair
                command: ./.circleci/test-github-repair.sh
            - run:
                name: Watch CircleCI tests after build:project:repair
                command: ./.circleci/watch-circle.sh
            - run:
                name: Test merge to master
                command: ./.circleci/test-merge-master.sh
            - run:
                name: Clean up WordPress GitHub fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up WordPress GitHub fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

    test_wordpress_gitlab:
        <<: *defaults
        resource_class: large
        steps:
            - checkout
            - run:
                name: dependencies
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Disable strict SSH host checking to prevent SSH connect issues
                command: echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
            - run:
                name: Test WordPress with GitLab
                command: ./.circleci/test-gitlab-repo.sh "pantheon-systems/example-wordpress-composer:dev-master" gitlabci
            - run:
                name: Watch GitLab CI tests
                command: ./.circleci/watch-gitlabci.sh
            - run:
                name: Clean up WordPress GitLab fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up WordPress GitLab fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

    test_wordpress_bitbucket:
        <<: *defaults
        steps:
            - checkout
            - run:
                name: Configure globals
                command: ./.circleci/set-up-globals.sh
            - run:
                name: Disable strict SSH host checking to prevent SSH connect issues
                command: echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
            - run:
                name: Test D8 with BitBucket
                command: echo "BitBucket test skipped"
                #command: ./.circleci/test-bitbucket-repo.sh "pantheon-systems/example-wordpress-composer:dev-master"
            - run:
                name: Watch CircleCI tests
                command: echo "Skipping the watch-cicle step too"
                #command: ./.circleci/watch-circle.sh
            - run:
                name: Clean up D8 Bitbucket fixtures after pass
                command: ./.circleci/cleanup-fixtures.sh ok
            - run:
                name: Clean up D8 Bitbucket fixtures after failure
                when: on_fail
                command: ./.circleci/cleanup-fixtures.sh fail

workflows:
    version: 2
    build_test:
        jobs:
            - unit
            - test_drupal_8_github:
                requires:
                   - unit
            - test_drupal_7_github:
                requires:
                   - unit
            - test_wordpress_github:
                requires:
                   - unit
            - test_wordpress_gitlab:
                requires:
                   - unit
            - test_drupal_8_gitlab:
                requires:
                   - unit
            - test_drupal_8_bitbucket:
                requires:
                   - unit
                   - test_drupal_7_github
                   - test_drupal_8_github
                   - test_drupal_8_gitlab
                   - test_wordpress_github
                   - test_wordpress_gitlab
            - test_wordpress_bitbucket:
                requires:
                   - unit
                   - test_drupal_7_github
                   - test_drupal_8_github
                   - test_drupal_8_gitlab
                   - test_wordpress_github
                   - test_wordpress_gitlab
